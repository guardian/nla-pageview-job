AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Copies new s3 objects to an ftp server

Parameters:
  Stack:
    Description: Stack name
    Type: String
    Default: content-api
  App:
    Description: Application name
    Type: String
    Default: s3-to-ftp
  Stage:
    Description: Stage name
    Type: String
    AllowedValues:
      - CODE
      - PROD
  DeployBucket:
    Description: Bucket to copy files to
    Type: String
    Default: content-api-dist
  FtpHost:
    Description: Hostname of the ftp server to upload to
    Type: String
  FtpUser:
    Description: Ftp username
    Type: String
  FtpPassword:
    Description: Ftp password
    Type: String
    NoEcho: true
  SourceBucketName:
    Description: Bucket where NLA files are generated
    Type: String
    Default: nla-analytics
  ZipDestinationBucketName:
    Description: Bucket where NLA zip files are stored
    Type: String
  AthenaRole:
    Description: Role to assume in order to read files produced by Athena
    Type: String
Resources:
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      Path: /
      Policies:
        - PolicyName: assume-athena-query
          PolicyDocument:
            Statement:
              Effect: Allow
              Action: sts:AssumeRole
              Resource: !Ref AthenaRole
  Lambda:
      Type: AWS::Serverless::Function
      Properties:
        FunctionName: !Sub ${App}-${Stage}
        Description: Copies new s3 objects to an ftp server
        Runtime: nodejs8.10
        Handler: lambda.handler
        MemorySize: 128
        Timeout: 300
        Environment:
          Variables:
            FtpHost: !Ref FtpHost
            FtpUser: !Ref FtpUser
            FtpPassword: !Ref FtpPassword
            Stage: !Ref Stage
            AthenaRole: !Ref AthenaRole
            DestinationBucket: !Ref ZipDestinationBucketName
        CodeUri:
          Bucket: !Ref DeployBucket
          Key: !Sub ${Stack}/${Stage}/${App}/${App}.zip
        Events:
          AthenaCSVEvent:
            Type: S3
            Properties:
              Bucket: !Ref SourceBucket
              Events: s3:ObjectCreated:*
        Role: !GetAtt ExecutionRole.Arn
  SourceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref SourceBucketName