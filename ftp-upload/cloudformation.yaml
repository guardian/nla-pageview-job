AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Copies new s3 objects to an ftp server

Parameters:
  Stack:
    Description: Stack name
    Type: String
    Default: content-api
  App:
    Description: Application name
    Type: String
    Default: s3-to-ftp
  Stage:
    Description: Stage name
    Type: String
    AllowedValues:
      - CODE
      - PROD
  DeployBucket:
    Description: Bucket to copy files to
    Type: String
    Default: content-api-dist
  FtpHost:
    Description: Hostname of the ftp server to upload to
    Type: String
  FtpUser:
    Description: Ftp username
    Type: String
  FtpPassword:
    Description: Ftp password
    Type: String
    NoEcho: true
  ZipFile:
    Description: True if file should be zipped before uploading to ftp
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
  AthenaRole:
    Description: Role to assume in order to query Athena
    Type: String
  SourceBucketName:
    Description: Bucket where NLA files are generated
    Type: String
    Default: nla-analytics
Resources:
  Lambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${App}-${Stage}
      Description: Copies new s3 objects to an ftp server
      Runtime: nodejs8.10
      Handler: lambda.handler
      MemorySize: 128
      Timeout: 300
      Environment:
        Variables:
          FtpHost: !Ref FtpHost
          FtpUser: !Ref FtpUser
          FtpPassword: !Ref FtpPassword
          ZipFile: !Ref ZipFile
          AthenaRole: !Ref AthenaRole
          Stage: !Ref Stage
      CodeUri:
        Bucket: !Ref DeployBucket
        Key: !Sub ${Stack}/${Stage}/${App}/${App}.zip
      Events:
        AthenaCSVEvent:
          Type: S3
          Properties:
            Bucket: !Ref SourceBucket
            Events: s3:ObjectCreated:*
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            Effect: Allow
            Action:
              - s3:GetObject
              - s3:ListObjects
            Resource:
              !Ref SourceBucket
  SourceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref SourceBucketName