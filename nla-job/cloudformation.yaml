AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Runs the NLA query in Athena which will store results in one of our S3 buckets

Parameters:
  Stack:
    Description: Stack name
    Type: String
    Default: content-api
  App:
    Description: Application name
    Type: String
    Default: nla-to-s3
  Stage:
    Description: Stage name
    Type: String
    AllowedValues:
      - CODE
      - PROD
  DeployBucket:
    Description: Bucket to copy files to
    Type: String
    Default: content-api-dist
  DestinationBucket:
    Description: List of the source bucket ARN permissions, e.g. 'arn:aws:s3::*:my-source-bucket-1/*,arn:aws:s3::*:my-source-bucket-2/*'
    Type: String
  Schema:
    Description: Data lake schema to run the query in
    Type: String
    Default: clean
  OphanAccountId:
    Description: Ophan Account id
    Type: String
  AthenaRole:
    Description: Role to assume in order to query Athena
    Type: String
Resources:
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      Path: /
      Policies:
        - PolicyName: assume-s3-read
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - s3:GetObject
                - s3:PutObject
                - s3:ListObjects
              Resource:
                !Ref DestinationBucket
        - PolicyName: assume-athena-query
          PolicyDocument:
            Statement:
              Effect: Allow
              Action: sts:AssumeRole
              Resource: !Ref AthenaRole

  Lambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${App}-${Stage}
      Description: Runs the NLA query against the data lake
      Runtime: nodejs8.10
      Handler: lambda.handler
      MemorySize: 128
      Timeout: 20
      Environment:
        Variables:
          Destination: !Ref DestinationBucket
          Schema: !Ref Schema
          AthenaRole: !Ref AthenaRole
          Stage: !Ref Stage
      CodeUri:
        Bucket: !Ref DeployBucket
        Key: !Sub ${Stack}/${Stage}/${App}/${App}.zip
      Role: !GetAtt ExecutionRole.Arn
